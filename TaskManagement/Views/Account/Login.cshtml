@using TaskManagement.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h5>Use a local account to log in.</h5>
                @Html.HiddenFor(x => x.EmpId, new { id = "EmpId" })
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger", @id = "Email" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Get OTP" class="btn btn-success"  id="SendOTPBtn"  onclick="SendOTP();" />
                    </div>
                </div>
                
                <div class="form-group" hidden>
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id = "Password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                  </div>
                    <div class="form-group" id="OTPSection" hidden>
                        @Html.LabelFor(m => m.OTP, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.OTP, new { htmlAttributes = new { @class = "form-control", @id = "OTP" } })
                            @Html.ValidationMessageFor(m => m.OTP, "", new { @class = "text-danger" })
                        </div>
                    </div>
                   
                    <div class="form-group" id="LogInBtnSection" hidden>
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Log in" id="LogInBtn" onclick="CallLogIn()" class="btn btn-default" />
                            
                        </div>
                    </div>
                <div class="form-group" hidden>
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>*@
                @*<p>
                    @Html.ActionLink("Register as a new user", "Register")
                </p>*@
                @* Enable this once you have account confirmation enabled for password reset functionality
                    <p>
                        @Html.ActionLink("Forgot your password?", "ForgotPassword")
                    </p>*@
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>

<script>
    function SendOTP()
    {

        var RegisterUsername = $("#Email").val();

        if (RegisterUsername.toString() == "") {
            $.smallBox({
                title: "Please enter valid Email/Mobile number",
                color: "orange",
                timeout: 5000
            });
            $('#Email').css('background-color', '#FF9999');
            return false;
        }

        $.ajax({
            type: 'POST',
            url: "/Master/SendOTP", // we are calling json method
            dataType: 'json',
            data: {  EmailOrPhone: RegisterUsername},
            success: function (result) {

                $("#EmpId").val(result);
               
                if(result > 0)
                {
                    $("#EmpId").val(result);
                    $("#OTPSection").attr('hidden',false);
                    $("#LogInBtnSection").attr('hidden',false);
                    $("#SendOTPBtn").hide();
                }
            }

        });
    }


</script>

<script>
       function CallLogIn()
    {
        var EmpId = $("#EmpId").val();
         var RegisterUsername = $("#Email").val();
        $("#Password").val('Asd@123');

    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}