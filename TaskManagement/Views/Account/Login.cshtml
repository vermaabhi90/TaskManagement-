@using TaskManagement.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

@*<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal",@id="LoginForm", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h5>Use a local account to log in.</h5>
                @Html.HiddenFor(x => x.EmpId, new { id = "EmpId" })
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger", @id = "Email" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Get OTP" class="btn btn-success"  id="SendOTPBtn"  onclick="SendOTP();" />
                    </div>
                </div>
                
                <div class="form-group" hidden>
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id = "Password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                  </div>
                    <div class="form-group" id="OTPSection" hidden>
                        @Html.LabelFor(m => m.OTP, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.OTP, new { htmlAttributes = new { @class = "form-control", @id = "OTP" } })
                            @Html.ValidationMessageFor(m => m.OTP, "", new { @class = "text-danger" })
                        </div>
                    </div>
                   
                    <div class="form-group" id="LogInBtnSection" hidden>
                        <div class="col-md-offset-2 col-md-10">
                            <input type="button" value="Log in" id="LogInBtn" onclick="CallLogIn()" class="btn btn-success" />
                            
                        </div>
                    </div>
                <div class="form-group" hidden>
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
            }
        </section>
    </div>
    <div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>
</div>*@

<div class="container-scroller">
    <div class="full-page-wrapper">
        <div class="content-wrapper d-flex align-items-center auth px-0">
            <div class="row w-100 mx-0">
                <div class="col-lg-4 mx-auto">
                    <div class="auth-form-light text-left py-5 px-4 px-sm-5">
                        <div class="brand-logo">
                            <img src="/Template/images/logo.svg" alt="logo">
                        </div>
                        <form id="LoginForm" class="smart-form" novalidate="novalidate" action="@Url.Action("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl })" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" id="EmpId" name="EmpId" />
                            <input type="hidden" id="Password" name="Password" />

                            <div class="form-group">
                                <input type="text" class="form-control form-control-lg" id="Email" name="Email" placeholder="User Name">
                            </div>

                            <div class="mt-3">
                                <a class="btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn" id="SendOTPBtn" onclick="SendOTP();">Get OTP</a>
                            </div>


                            <div class="form-group" id="OTPSection" hidden>
                                <input type="text" class="form-control form-control-lg" id="OTP" placeholder="OTP" name="OTP">
                            </div>
                            <div class="mt-3" id="LogInBtnSection" hidden>
                                <a class="btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn" id="LogInBtn" onclick="CallLogIn()">SIGN IN</a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- content-wrapper ends -->
    </div>
</div>




<script>
    function SendOTP()
    {

        var RegisterUsername = $("#Email").val();

        if (RegisterUsername.toString() == "") {
            alert("Please enter valid Email/Mobile number")
            return false;
        }

        $.ajax({
            type: 'POST',
            url: "/Master/SendOTP", // we are calling json method
            dataType: 'json',
            data: {  EmailOrPhone: RegisterUsername},
            success: function (result) {

                $("#EmpId").val(result);
               
                if (result > 0) {
                    $("#EmpId").val(result);
                    $("#OTPSection").attr('hidden', false);
                    $("#LogInBtnSection").attr('hidden', false);
                    $("#SendOTPBtn").hide();
                }
                else {
                    alert("Invalid UserName!")
                    $("#Email").val("");
                }
            }

        });
    }


</script>

<script>
    function CallLogIn() {
        var OTP   = $('#OTP').val();
        var EmpId = $('#EmpId').val();
        var Email = $('#Email').val();
        $.ajax({
            type: 'POST',
            url: "/Master/VerifyOTP", // we are calling json method
            dataType: 'json',
            data: { OTP: OTP, EmpId: EmpId, Email: Email },
            success: function (errorcode) {
                if (errorcode == 500000) {
                    $("#Password").val('Asd@123');
                    $('#LoginForm').submit();
                }
                else {

                    alert("Invalid OTP !")
                    $('#OTP').val("");
                }

            }
        });



       
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}